name: Security Pipeline

on:
  schedule:
    - cron: '0 5 * * *'  # Daily at 5 AM
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-check:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      security-events: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io unzip
          pip install --user -r requirements.txt

      - name: Install Security Tools
        run: |
          # Install OWASP ZAP
          docker pull owasp/zap2docker-stable
          
          # Install Nuclei
          curl -s https://api.github.com/repos/projectdiscovery/nuclei/releases/latest | \
            grep 'browser_download_url.*linux_amd64.zip' | cut -d '"' -f 4 | wget -qi -
          unzip -q nuclei-*-linux_amd64.zip
          sudo mv nuclei /usr/local/bin/
          rm nuclei-*-linux_amd64.zip
          
          # Install Dependency-Check
          wget -q https://github.com/jeremy-lin/dependency-check/releases/download/v6.5.3/dependency-check-6.5.3-release.zip
          unzip -q dependency-check-6.5.3-release.zip -d dependency-check
          rm dependency-check-6.5.3-release.zip

      - name: Install Aider
        run: pip install --user aider-chat

      - name: Cache Security Results
        uses: actions/cache@v3
        with:
          path: .security_cache
          key: ${{ runner.os }}-security-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-security-

      - name: Run security pipeline
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          ./run_pipeline.sh

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md

      - name: Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "security: Automated security fixes"
          branch: security-fixes
          title: "security: Automated fixes for vulnerabilities"
          body: |
            ðŸ¤– Automated security fixes by Agentic Security pipeline
            
            ## Changes Made
            - Vulnerability fixes generated by AI models
            - Code security improvements
            - Dependency updates
            
            ## Validation
            - All fixes have been validated
            - Security scans passed
            - Tests are passing
          labels: security, automated-pr
