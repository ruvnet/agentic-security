[pytest]
# Test discovery and execution
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    streamlit: marks tests that involve Streamlit components
    integration: marks integration tests
    unit: marks unit tests
    slow: marks tests that are slow to execute

# Output configuration
addopts =
    --verbose
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail
    --durations=10

# Coverage configuration
[coverage:run]
source = .
omit =
    */tests/*
    */__pycache__/*
    */venv/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

# Environment variables for tests
env =
    STREAMLIT_BROWSER_GATHER_USAGE_STATS = false
    STREAMLIT_SERVER_ADDRESS = localhost
    STREAMLIT_SERVER_PORT = 8501
    STREAMLIT_SERVER_HEADLESS = true
    PYTHONPATH = {toxinidir}

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test session configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning

# Temporary directory configuration
tmp_path_retention_count = 3
tmp_path_retention_policy = failed

# Parallel execution
# Uncomment to enable parallel execution
# addopts = -n auto

# Custom options
minversion = 6.0
required_plugins = 
    pytest-cov
    pytest-mock
    pytest-asyncio
    pytest-env
